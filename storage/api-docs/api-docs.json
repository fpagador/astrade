{
    "openapi": "3.0.0",
    "info": {
        "title": "Talentismo API",
        "description": "Talentismo API Documentation",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080/astrade/public",
            "description": "Main API Server"
        }
    ],
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User login",
                "description": "Perform user authentication using ID and password.",
                "operationId": "222b2625838e3c57e017987f73598fda",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "dni": {
                                        "type": "string",
                                        "example": "12345678A"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "secret"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "token_value"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh authentication token",
                "description": "Refresh the authentication token for the authenticated user.",
                "operationId": "f6409cd8d794404a6410b0767432b0f4",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token refreshed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "new_token_value"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "description": "Logout the authenticated user.",
                "operationId": "ad65cbbd4e9f201619eae184a5961a98",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/calendar/{type}": {
            "get": {
                "tags": [
                    "Calendar"
                ],
                "summary": "Get user calendar days by type",
                "description": "Returns the vacation, holiday, or legal_absence days recorded for the authenticated user.",
                "operationId": "435f1760628a42060d9a59cd1cc0e855",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of calendar days: vacation, holiday or legal_absence",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "vacation",
                                "holiday",
                                "legal_absence"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Calendar days retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Vacation days retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "color": {
                                                    "properties": {
                                                        "class": {
                                                            "type": "string",
                                                            "example": "bg-green-500"
                                                        },
                                                        "hex": {
                                                            "type": "string",
                                                            "example": "#22c55e"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "days": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "date": {
                                                                "type": "string",
                                                                "format": "date",
                                                                "example": "2025-09-01"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Family vacation"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/calendar/colors": {
            "get": {
                "tags": [
                    "Calendar"
                ],
                "summary": "Get all available calendar colors",
                "description": "Returns all available calendar colors.",
                "operationId": "8a5affa635dbd94d29692e552b632958",
                "responses": {
                    "200": {
                        "description": "Calendar colors retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Colors retrieved successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": [
                                                {
                                                    "properties": {
                                                        "class": {
                                                            "type": "string",
                                                            "example": "bg-green-500"
                                                        },
                                                        "hex": {
                                                            "type": "string",
                                                            "example": "#22c55e"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/subtasks/{subtask_id}/status/{status}": {
            "put": {
                "tags": [
                    "Subtasks"
                ],
                "summary": "Update subtask status",
                "description": "Update the status of a subtask (completed or pending).\n\nRules:\n- Only the owner of the parent task can update the subtask.\n- If all subtasks are completed → parent task becomes completed.\n- If any subtask is pending → parent task becomes pending.",
                "operationId": "02f47140fe0263e43b89178ae342050e",
                "parameters": [
                    {
                        "name": "subtask_id",
                        "in": "path",
                        "description": "ID of the subtask",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 23
                        }
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "description": "New status of the subtask",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "completed",
                                "pending"
                            ],
                            "example": "pending"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subtask status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Invalid status"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/tasks/{task_id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get details of a specific task",
                "description": "Displays the details of a task for the authenticated user.",
                "operationId": "bd69e9b15de99bcda89565ecb76a1337",
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "description": "ID of the task",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task details with subtasks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/tasks/day-offset/{offset}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get tasks for a specific day offset",
                "description": "Returns the tasks for a specific day offset for the authenticated user.",
                "operationId": "3b73a426b1658c80ca7d70860a1dfdd9",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "path",
                        "description": "Number of days from today (0 = today)",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tasks for the given day",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid offset"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/profile": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get authenticated user profile",
                "description": "Profile of the authenticated user.",
                "operationId": "f69dd6dc34b5f56ee97b999ac23bbbd9",
                "responses": {
                    "200": {
                        "description": "User profile retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ApiResponse": {
                "properties": {
                    "success": {
                        "description": "Returns a standardized JSON response",
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation successful"
                    },
                    "data": {
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Enter the token in the format: Bearer {token}",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Subtasks",
            "description": "Endpoints for managing subtasks"
        },
        {
            "name": "Tasks",
            "description": "Endpoints for managing tasks"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Calendar",
            "description": "Calendar"
        },
        {
            "name": "User",
            "description": "User"
        }
    ]
}